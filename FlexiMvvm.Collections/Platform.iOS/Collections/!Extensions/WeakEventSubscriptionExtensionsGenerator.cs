// <auto-generated />
// =========================================================================
// Copyright 2019 EPAM Systems, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// =========================================================================

using System;
using FlexiMvvm.Weak.Subscriptions;

namespace FlexiMvvm.Collections
{
    /// <summary>Provides a set of static methods for weak subscriptions on <see cref="FlexiMvvm.Collections.PickerViewObservableModel{T}"/> class events.</summary>
    public static class PickerViewObservableModelWeakEventSubscriptionExtensions
    {
        /// <summary>Weak subscription on <see cref="FlexiMvvm.Collections.PickerViewObservableModel{T}.SelectedCalled"/> event.</summary>
        /// <returns>Weak event subscription instance.</returns>
        /// <param name="eventSource">The source of the event.</param>
        /// <param name="eventHandler">Represents the method that will handle the <see cref="FlexiMvvm.Collections.PickerViewObservableModel{T}.SelectedCalled"/> event.</param>
        /// <exception cref="ArgumentNullException"><paramref name="eventSource" /> is null.-or-<paramref name="eventHandler" /> is null.</exception>
        public static IDisposable SelectedCalledWeakSubscribe<T>(
            this FlexiMvvm.Collections.PickerViewObservableModel<T> eventSource,
            EventHandler<FlexiMvvm.Collections.PickerViewItemSelectedEventArgs> eventHandler)
        {
            if (eventSource == null)
                throw new ArgumentNullException(nameof(eventSource));
            if (eventHandler == null)
                throw new ArgumentNullException(nameof(eventHandler));

            return new EventHandlerWeakEventSubscription<FlexiMvvm.Collections.PickerViewObservableModel<T>, FlexiMvvm.Collections.PickerViewItemSelectedEventArgs>(
                eventSource,
                (source, handler) => source.SelectedCalled += handler,
                (source, handler) => source.SelectedCalled -= handler,
                eventHandler);
        }

    }
}

